import type { NextPage } from "next";
import Head from "next/head";
import { useState, useEffect } from "react";
import { ethers } from "ethers";
import { Nigiri__factory } from "../typechain/factories/Nigiri__factory";
import { AppConfig } from "../app.config";
import { getDefaultProvider } from "@ethersproject/providers";
import { useEthers, useContractFunction } from "@usedapp/core";

const Home: NextPage = () => {
  const [amountValue, setAmountValue] = useState("0");
  const [amount, setAmount] = useState(0);
  const [currentFee, setCurrentFee] = useState(ethers.constants.Zero);
  const [maxSupply, setMaxSupply] = useState(0);
  const [totalSupply, setTotalSupply] = useState(0);
  const [mintMessage, setMintMessage] = useState("Enter amount");

  const { library, activateBrowserWallet, active } = useEthers();

  const nigiri = Nigiri__factory.connect(
    AppConfig.contracts.nigiri,
    library || getDefaultProvider("")
  );

  const { state: mintState, send: mint } = useContractFunction(nigiri, "mint");

  useEffect(() => {
    const handle = async () => {
      const max = await nigiri.callStatic.MAX_SUPPLY();
      setMaxSupply(max.toNumber());

      const total = await nigiri.callStatic.totalSupply();
      setTotalSupply(total.toNumber());
    };

    handle();
  }, [mintState]);

  useEffect(() => {
    const handle = async () => {
      if (amount > 0) {
        const fee = await nigiri.callStatic.currentFee(Number(amount));
        setCurrentFee(fee);
      } else {
        setCurrentFee(ethers.constants.Zero);
      }
    };

    handle();
  });

  const handleChangeAmount = (e: React.ChangeEvent<HTMLInputElement>) => {
    setAmountValue(e.target.value);
    setMintMessage("Enter amount");
  };

  const setDelayingMintMessage = (message: string, delayedMessage: string) => {
    setMintMessage(message);
    setTimeout(() => {
      setMintMessage(delayedMessage);
    }, 2000);
  };

  const handleBlur = async (e: React.ChangeEvent<HTMLInputElement>) => {
    const amt = Number(amountValue);
    if (Number.isNaN(amt)) {
      setDelayingMintMessage("Invalid amount", "Enter amount");
      setAmountValue("0");
      setAmount(0);
      return;
    }

    if (amt % 1 !== 0) {
      setDelayingMintMessage("Invalid amount", "Enter amount");
      setAmountValue("0");
      setAmount(0);
      return;
    }

    if (amt < 0) {
      setDelayingMintMessage("Invalid amount", "Enter amount");
      setAmountValue("0");
      setAmount(0);
      return;
    }

    if (amt + totalSupply > maxSupply) {
      setDelayingMintMessage("Supply exceeded", "Enter amount");
      setAmountValue("0");
      setAmount(0);
      return;
    }

    setAmount(amt);
    if (amt > 0) {
      setMintMessage("Mint");
      return;
    }

    setMintMessage("Enter amount");
  };

  const handleMint = () => {
    if (amount == 0) {
      setDelayingMintMessage("Can't!", "Enter amount");
      return;
    }
    setMintMessage("Minting");
    mint(amount, { value: currentFee });
  };

  useEffect(() => {
    if (mintState.status === "Success") {
      setMintMessage("Success");
      return;
    }

    if (mintState.status === "Fail") {
      setDelayingMintMessage("Fail", "Mint");
      return;
    }

    if (mintState.status === "Exception") {
      setDelayingMintMessage("Exception", "Mint");
      return;
    }

    return;
  }, [mintState]);

  return (
    <div>
      <Head>
        <title>WARESUSHI</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="">
        <div className="bg-white px-4 py-6 text-4xl grid grid-cols-6 gap-0 border-black border-b-4">
          {/* <div className="col-span-5">WARESUSHI</div> */}
          <div className="col-span-5"> </div>
          <div className="text-right" onClick={activateBrowserWallet}>
            W
          </div>
        </div>
        <div className="container mx-auto h-full max-w-screen-sm">
          <div className="container px-4 ">
            <div className="square box-border my-4 p-8 bg-white border-black border-4"></div>
            <div className="text-4xl bg-white border-black border-4 text-center py-4 mb-4">
              {totalSupply}/{maxSupply}
            </div>
            <div className="text-4xl grid grid-cols-12 gap-4 mb-4">
              <div className="grid place-items-center bg-white border-black border-4 col-span-7 py-4">
                E {ethers.utils.formatEther(currentFee)}
              </div>
              <div className="grid place-items-center bg-white border-black border-4 col-span-5 py-4">
                <input
                  className="underline w-20"
                  type="text"
                  value={`${amountValue}`}
                  onChange={handleChangeAmount}
                  onBlur={handleBlur}
                />
              </div>
            </div>
            <div
              className="text-4xl bg-white border-black border-4 text-center py-4"
              onClick={handleMint}
            >
              {mintMessage}
            </div>
          </div>
        </div>
      </main>

      <footer></footer>
    </div>
  );
};

export default Home;
